<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<resultMap type="com.project.shop.user.vo.UserVO" id="userMap">
		<id property="email" column="email"/>
		<result property="name" column="name"/>
		<result property="phoneNum" column="phone_num"/>
		<result property="userType" column="user_type"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="deleteDate" column="delete_date"/>
		<result property="blackListDate" column="black_list_date"/>
		<collection property="keeps" ofType="com.project.shop.progress.vo.KeepVO">
			<id property="keepNo" column="keep_no"/>
			<result property="keepUser" column="keep_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="carts" ofType="com.project.shop.progress.vo.CartVO">
			<id property="cartNo" column="cart_no"/>
			<result property="cartUser" column="cart_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="optNo" column="opt_no"/>
			<result property="itemCount"  column="item_count"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
	</resultMap>
	<select id="userAll" resultMap="userMap">
		select * from user where user_type != 0; <!-- 유저테이블 전체 조회 쿼리 -->
	</select>
		
	<!-- email = #{email}일 때 유저테이블의 user_type을 2로 수정하는 쿼리 -->
 	<update id="blackList"  parameterType="com.project.shop.user.vo.UserVO">
		update user set user_type = 2 , black_list_date =now() where email = #{email};  
	</update>
	
	<!-- 사용자를 데이터베이스에 삽입하는 쿼리 -->
	<insert id="saveUser" parameterType="com.project.shop.user.vo.UserVO">
	    INSERT INTO user (email, name, phone_num, user_type)  <!-- 'user' 테이블에 데이터 삽입 -->
	    VALUES (#{email}, #{name}, #{phoneNum}, 1)  <!-- 사용자 이메일, 이름, 전화번호, 기본 사용자 타입(1)을 삽입 -->
	</insert>
	
	<!-- 이메일로 사용자를 검색하는 쿼리 -->
	<select id="findUserByEmail" parameterType="string" resultType="com.project.shop.user.vo.UserVO">
	    SELECT * FROM user WHERE email = #{email}  <!-- 'user' 테이블에서 주어진 이메일과 일치하는 사용자 정보를 조회 -->
	</select>
	
</mapper>