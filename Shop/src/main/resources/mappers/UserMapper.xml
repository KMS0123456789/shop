<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<resultMap type="com.project.shop.user.vo.UserVO" id="userMap">
		<id property="email" column="email"/>
		<result property="name" column="name"/>
		<result property="phoneNum" column="phone_num"/>
		<result property="userType" column="user_type"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="deleteDate" column="delete_date"/>
		<result property="blackListDate" column="black_list_date"/>
		<collection property="keeps" ofType="com.project.shop.progress.vo.KeepVO">
			<id property="keepNo" column="keep_no"/>
			<result property="keepUser" column="keep_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="carts" ofType="com.project.shop.progress.vo.CartVO">
			<id property="cartNo" column="cart_no"/>
			<result property="cartUser" column="cart_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="optNo" column="opt_no"/>
			<result property="itemCount"  column="item_count"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="asks" ofType="com.project.shop.progress.vo.AskVO">
			<id property="askNo" column="ask_no"/>
			<result property="askUser" column="ask_user"/>
			<result property="askDate" column="ask_date"/>
			<result property="askStateFlag" column="ask_state_flag"/>
			<result property="askDeleteFlag" column="ask_delete_flag"/>
		</collection>
		<collection property="addrs" ofType="com.project.shop.user.vo.AddrVO">
			<id property="addrNo" column="addr_no"/>
			<result property="addrUserEmail" column="addr_user_email"/>
			<result property="address" column="address"/>
			<result property="dAddrName" column="d_addr_name"/>
			<result property="addrUserName" column="addr_user_name"/>
			<result property="addrLandLine" column="addr_land_line"/>
			<result property="addrUserPhoneNum" column="addr_user_phone_num"/>
			<result property="addrFlag" column="addr_flag"/>
		</collection>
		<collection property="questions" ofType="com.project.shop.user.vo.QuestionVO">
			<id property="questionNo" column="question_no"/>
			<result property="questionUser" column="question_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="questionTitle" column="question_title"/>
			<result property="questionBody" column="question_body"/>
			<result property="questionCreateDate" column="question_create_date"/>
			<result property="questionFlag" column="question_flag"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="reviews" ofType="com.project.shop.user.vo.ReviewVO">
			<id property="reviewNo" column="review_no"/>
			<result property="reviewUser" column="review_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="reviewBody" column="review_body"/>
			<result property="reviewCreateDate" column="review_create_date"/>
			<result property="itemCategory" column="item_category"/>
		</collection>

	</resultMap>
	
	<!-- 유저 조회하는 쿼리 -->
	<select id="userAll" resultMap="userMap">
		select * from user where user_type != 0; <!-- 유저테이블에서 userType이 0이 아닌 유저들을 전체 조회 쿼리 -->
	</select>
		
	<!-- 유저테이블의 user_type을 2로 수정하는 쿼리 -->
 	<update id="blackList"  parameterType="com.project.shop.user.vo.UserVO">
		update user set user_type = 2 , black_list_date =now() where email = #{email};  <!-- 'user'테이블에서 usertype,black_list_date =now()로 변경하는 쿼리-->
	</update>
	
	<!-- 로그인 하려는 유저의 이메일, 이름, 휴대폰번호가 가입한 회원의 이메일, 이름, 휴대폰번호와 같은지 조회하는 쿼리  -->
	<select id="login" parameterType="com.project.shop.user.vo.UserVO" resultMap="userMap">
		select * from user where email = #{email} and name = #{name} and phone_num = #{phoneNum};
	</select>
	
	<!-- 사용자를 데이터베이스에 삽입하는 쿼리 -->
	<insert id="join" parameterType="com.project.shop.user.vo.UserVO">
	    INSERT INTO user (email, name, phone_num, user_type)  <!-- 'user' 테이블에 데이터 삽입 -->
	    VALUES (#{email}, #{name}, #{phoneNum}, 1)  <!-- 사용자 이메일, 이름, 전화번호, 기본 사용자 타입(1)을 삽입 -->
	</insert>
	
	<!-- 이메일로 사용자를 검색하는 쿼리 -->
	<select id="findUserByEmail" parameterType="string" resultType="com.project.shop.user.vo.UserVO">
	    SELECT * FROM user WHERE email = #{email}  <!-- 'user' 테이블에서 주어진 이메일과 일치하는 사용자 정보를 조회 -->
	</select>
	
	<!-- 유저가 찜한 개수 찾는 쿼리-->
	<select id="keepCount" resultType="int">
		select count(*) from user left join keep on email = keep_user
			<where>
				and keep_no;
			</where>
	</select>
	
	<!-- 유저가 장바구니에 담은 개수 찾는 쿼리-->
	<select id="cartCount" resultType="int">
		select count(*) from user left join cart on email = cart_user
			<where>
				and cart_no;
			</where>
	</select>
	
	<!-- 유저가 주문한 개수 찾는 쿼리-->
	<select id="orderCount" resultType="int">
		select count(*) from user left join ask on email = ask_user
		<where>
			and ask_no;
		</where>
	</select>
	
	<!-- 유저가 결제완료한 개수 찾는 쿼리-->
	<select id="payCount" resultType="int">
		select count(*) from user left join ask on email = ask_user
			<where>
				and ask_no 
				and ask_state_flag = 0;
			</where>
	</select>
	
	<!-- 배송준비중인  개수 찾는 쿼리-->
	<select id="dReadyCount" resultType="int">
		select count(*) from user left join ask on email = ask_user
			<where>
				and ask_no 
				and ask_state_flag = 1;
			</where>
	</select>
	
	<!-- 상품 배송 완료된 개수 찾는 쿼리-->
	<select id="clearCount" resultType="int">
		select count(*) from user left join ask on email = ask_user
			<where>
				and ask_no 
				and ask_state_flag = 2;
			</where>
	</select>
	
	<!-- 상품 취소된 개수 찾는 쿼리-->
	<select id="orcancelCount" resultType="int">
		select count(*) from user left join ask on email = ask_user
			<where>
				and ask_no 
				and ask_delete_flag = 1;
			</where>
	</select>
	
	<!-- 상품 교환한 개수 찾는 쿼리-->
	<select id="orchangeCount" resultType="int">
		select count(*) from user left join ask on email = ask_user
			<where>
				and ask_no 
				and ask_delete_flag = 2;
			</where>
	</select>
	<!-- 회원정보 가져오는 쿼리 -->
	<select id="mymodify" resultMap="userMap">
		select user.email, user.name, user.phone_num, addr.address from user left join addr on email = addr_user_email;
	</select>
	
</mapper>