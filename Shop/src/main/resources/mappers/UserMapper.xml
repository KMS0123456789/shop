<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<resultMap type="com.project.shop.user.vo.UserVO" id="userMap">
		<id property="email" column="email"/>
		<result property="name" column="name"/>
		<result property="phoneNum" column="phone_num"/>
		<result property="userType" column="user_type"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="deleteDate" column="delete_date"/>
		<result property="blackListDate" column="black_list_date"/>
		<result property="keepCount" column="keep_count"/>
		<result property="cartCount" column="cart_count"/>
		<result property="payCount" column="pay_count"/>
		<result property="dReadyCount" column="dready_count"/>
		<result property="clearCount" column="clear_count"/>
		<result property="orcancelCount" column="orcancel_count"/>
		<result property="orchangeCount" column="orchange_count"/>
		<result property="buyCount" column="buy_count"/>
		<collection property="keeps" ofType="com.project.shop.progress.vo.KeepVO">
			<id property="keepNo" column="keep_no"/>
			<result property="keepUser" column="keep_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="carts" ofType="com.project.shop.progress.vo.CartVO">
			<id property="cartNo" column="cart_no"/>
			<result property="cartUser" column="cart_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="optNo" column="opt_no"/>
			<result property="itemCount"  column="item_count"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="asks" ofType="com.project.shop.progress.vo.AskVO">
			<id property="askNo" column="ask_no"/>
			<result property="askUser" column="ask_user"/>
			<result property="askDate" column="ask_date"/>
			<result property="askStateFlag" column="ask_state_flag"/>
			<result property="askDeleteFlag" column="ask_delete_flag"/>
		</collection>
		<collection property="addrs" ofType="com.project.shop.user.vo.AddrVO">
			<id property="addrNo" column="addr_no"/>
			<result property="addrUserEmail" column="addr_user_email"/>
			<result property="addressCode" column="address_code"/>
			<result property="address" column="address"/>
			<result property="addressDetail" column="address_detail"/>
			<result property="dAddrName" column="d_addr_name"/>
			<result property="addrUserName" column="addr_user_name"/>
			<result property="addrUserLandLine" column="addr_User_landline"/>
			<result property="addrUserPhoneNum" column="addr_user_phone_num"/>
			<result property="addrFlag" column="addr_flag"/>
			<result property="addressPlus" column="address_plus"/>
		</collection>
		<collection property="questions" ofType="com.project.shop.user.vo.QuestionVO">
			<id property="questionNo" column="question_no"/>
			<result property="questionUser" column="question_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="questionTitle" column="question_title"/>
			<result property="questionBody" column="question_body"/>
			<result property="questionCreateDate" column="question_create_date"/>
			<result property="questionFlag" column="question_flag"/>
			<result property="itemCategory" column="item_category"/>
		</collection>
		<collection property="reviews" ofType="com.project.shop.user.vo.ReviewVO">
			<id property="reviewNo" column="review_no"/>
			<result property="reviewUser" column="review_user"/>
			<result property="computerNo" column="computer_no"/>
			<result property="peripheralNo" column="peripheral_no"/>
			<result property="reviewBody" column="review_body"/>
			<result property="reviewCreateDate" column="review_create_date"/>
			<result property="itemCategory" column="item_category"/>
		</collection>

	</resultMap>
	
	<!-- 유저 조회하는 쿼리 -->
	<!-- 블랙리스트 전체 조회+페이징 기능 -->
	<select id="userAll" resultMap="userMap">
		select * from user where user_type != 0
		<!-- where 태그 쓸 때는 where가 있다 생각하고 and부터 쓴다 -->
		<where>
			<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
				and ${searchType} like concat('%',#{keyword},'%')
			</if>
		</where>
		order by email desc
		limit #{offset}, #{limit}
	</select>
	
	<!-- 블랙리스트 전체 개수 조회 -->
	<select id="count" resultType="int">
		select count(*) from user 
		<where>
			<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
				and ${searchType} like concat('%',#{keyword},'%')
			</if>
		</where>
	</select>
		
	<!-- 유저테이블의 user_type을 2로 수정하는 쿼리 -->
 	<update id="blackList"  parameterType="com.project.shop.user.vo.UserVO">
		update user set user_type = 2 , black_list_date =now() where email = #{email};  <!-- 'user'테이블에서 usertype,black_list_date =now()로 변경하는 쿼리-->
	</update>
	
	<!-- 로그인 하려는 유저의 이메일, 이름, 휴대폰번호가 가입한 회원의 이메일, 이름, 휴대폰번호와 같은지 조회하는 쿼리  -->
	<select id="login" parameterType="com.project.shop.user.vo.UserVO" resultMap="userMap">
		select * from user where email = #{email} and name = #{name} and phone_num = #{phoneNum};
	</select>
	
	<!-- 사용자를 데이터베이스에 삽입하는 쿼리 -->
	<insert id="join" parameterType="com.project.shop.user.vo.UserVO">
	    INSERT INTO user (email, name, phone_num, user_type)  <!-- 'user' 테이블에 데이터 삽입 -->
	    VALUES (#{email}, #{name}, #{phoneNum}, 1)  <!-- 사용자 이메일, 이름, 전화번호, 기본 사용자 타입(1)을 삽입 -->
	</insert>
	
	<!-- 이메일로 사용자를 검색하는 쿼리 -->
	<select id="findUserByEmail" parameterType="string" resultType="com.project.shop.user.vo.UserVO">
	    SELECT * FROM user WHERE email = #{email}  <!-- 'user' 테이블에서 주어진 이메일과 일치하는 사용자 정보를 조회 -->
	</select>
	
	<!-- 유저가 찜한 , 장바구니, 결제, 배송 정보 찾는 쿼리-->
	<select id="mylist" resultType="int" resultMap="userMap">
		select *,
		(select count(keep_user) from keep where keep_user = #{email}) as keep_count, <!-- keep 테이블에  특정 유저가 찜한 조회 개수 조회, 이름을 keep_count로 설정.-->
		(select count(cart_user) from cart where cart_user = #{email}) as cart_count, <!-- cart 테이블에  특정 유저가 장바구니에 담은 개수 조회, 이름을 cart_count로 설정.-->
		(select count(ask_user) from ask where ask_state_flag = 1 and ask_delete_flag = 0 and ask_user = #{email}) as pay_count, <!-- ask 테이블에 특정 유저가 결제완료한 개수 조회, 이름을 pay_count로 설정.-->
		(select count(ask_user) from ask where ask_state_flag = 2 and ask_user = #{email}) as dready_count, <!-- ask 테이블에 특정 유저가 배송준비중인 개수 조회, 이름을 dready_count로 설정.-->
		(select count(ask_user) from ask where ask_state_flag = 3 and ask_user = #{email}) as clear_count, <!-- ask 테이블에 특정 유저가 배송완료된 개수 조회, 이름을 clear_count로 설정.--> 
		(select count(ask_user) from ask where ask_state_flag = 4 and ask_user = #{email}) as buy_count, <!-- ask 테이블에 특정 유저가 배송완료된 개수 조회, 이름을 buy_count로 설정.--> 
		(select count(ask_user) from ask where ask_delete_flag = 1 and ask_state_flag = 1 and ask_user = #{email}) as orcancel_count, <!-- ask 테이블에 특정 유저가 주문취소한 개수 조회, 이름을 orcancel_count로 설정.-->
		(select count(ask_user) from ask where ask_delete_flag = 4 and ask_state_flag = 3 and ask_user = #{email}) as orchange_count <!-- ask 테이블에 특정 유저가 교환한 개수 조회, 이름을 orchange_count로 설정.-->
		from user where user.email = #{email}; <!-- user테이블에 특정 이메일로 입력한 것 조회. -->
	</select>
	
</mapper>