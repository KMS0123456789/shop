<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AddrMapper">
	<resultMap type="com.project.shop.user.vo.AddrVO" id="addrMap">
		<id property="addrNo" column="addr_no"/>
		<result property="addrUserEmail" column="addr_user_email"/>
		<result property="addressCode" column="address_code"/>
		<result property="address" column="address"/>
		<result property="addressDetail" column="address_detail"/>
		<result property="dAddrName" column="d_addr_name"/>
		<result property="addrUserName" column="addr_user_name"/>
		<result property="addrUserLandLine" column="addr_user_landline"/>
		<result property="addrUserPhoneNum" column="addr_user_phone_num"/>
		<result property="addrFlag" column="addr_flag"/>
		<result property="addressPlus" column="address_plus"/>
		<collection property="users" ofType="com.project.shop.user.vo.UserVO">
			<id property="email" column="email"/>
			<result property="name" column="name"/>
			<result property="phoneNum" column="phone_num"/>
			<result property="userType" column="user_type"/>
			<result property="createDate" column="create_date"/>
			<result property="updateDate" column="update_date"/>
			<result property="deleteDate" column="delete_date"/>
			<result property="blackListDate" column="black_list_date"/>
		</collection>
	</resultMap>
	
	<!-- 배송주소 등록 쿼리 -->
	<insert id="myaddrplus"  parameterType="com.project.shop.user.vo.AddrVO" useGeneratedKeys="true" keyProperty="addrNo">
		insert into addr(addr_user_email, address_code, address, address_detail,
							 address_plus, d_addr_name, addr_user_name, 
							 addr_user_landline, addr_user_phone_num, addr_flag) <!-- addr 테이블에 데이터 추가 -->
					values(#{addrUserEmail}, #{addressCode}, #{address}, #{addressDetail}, #{addressPlus},
							#{dAddrName}, #{addrUserName}, #{addrUserLandLine}, #{addrUserPhoneNum}, #{addrFlag}) <!-- addr테이블에 넣을 데이터 입력 -->
	</insert>
	
	<!-- 배송 주소 단건 조회 쿼리-->
	<select id="myaddrOne" resultMap="addrMap">
		select * from addr where addr_no = #{addrNo} <!-- 배송 주소 번호에 따른 조회 -->
	</select>
	
	<!-- 배송 주소 업데이트 쿼리 -->
	<update id="myaddrModify" parameterType="com.project.shop.user.vo.AddrVO">
		update addr set d_addr_name = #{dAddrName}, addr_user_name= #{addrUserName}, 
							address = #{address}, address_code = #{addressCode}, address_plus = #{addressPlus},
							address_detail = #{addressDetail}, addr_user_landline = #{addrUserLandLine},
							addr_user_phone_num = #{addrUserPhoneNum}, addr_flag = #{addrFlag} where addr_no = #{addrNo}; <!-- addr 테이블에 있는 특정 데이터 업데이트 -->
	</update>
	
	<!-- 배송 주소 삭제 쿼리 -->
	<delete id="myaddrDelete" >
		delete from addr where addr_no in <!-- addr 테이블에 있는 특정 주소 삭제 -->
		<foreach collection="list" item="addr" open="(" separator="," close=")" index="index">
			${addr} <!-- 선택한 주소 번호  -->
		</foreach>
	</delete>
	
	<!-- 회원 배송지 목록 가져오는 쿼리 -->
	<select id="myaddrlist" resultMap="addrMap">
		select * from addr left join user on addr.addr_user_email = user.email where addr_user_email = #{addrUserEmail} order by addr_flag = 0 desc; <!-- 유저별 입력한 주소 조회 addr_flag가 0인거 부터 맨위에 정렬 -->
	</select>
	
	<!-- 특정 주소 addr_flag 1로 업데이트하는 쿼리 -->	
	<update id="myaddr1" parameterType="com.project.shop.user.vo.AddrVO">
		update addr set addr_flag = 1 where addr_user_email= #{addrUserEmail} and addr_no not in(#{addrNo}); <!-- 특정 배송주소 외에 addr_flag 1로 바꿈. -->
	</update>
	
</mapper>